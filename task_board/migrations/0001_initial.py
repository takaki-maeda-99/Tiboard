# Generated by Django 5.1 on 2024-10-21 02:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('socialaccount', '0006_alter_socialaccount_extra_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(default='', max_length=100, unique=True)),
                ('course_name', models.CharField(default='', max_length=100)),
                ('link', models.URLField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CourseWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursework_id', models.CharField(default='', max_length=100)),
                ('coursework_title', models.CharField(max_length=100)),
                ('description', models.CharField(default='No description', max_length=100)),
                ('materials', models.TextField(blank=True, default='')),
                ('link', models.URLField(blank=True, default='')),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('due_time', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='task_board.course')),
            ],
            options={
                'unique_together': {('course_id', 'coursework_id')},
            },
        ),
        migrations.CreateModel(
            name='CustomSocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_courseworks', models.ManyToManyField(blank=True, to='task_board.coursework')),
                ('enrolled_courses', models.ManyToManyField(blank=True, to='task_board.course')),
                ('social_account', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='custom_account', to='socialaccount.socialaccount')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(default='', max_length=100, unique=True)),
                ('user_email', models.EmailField(default='', max_length=100)),
                ('assignment_courseworks', models.ManyToManyField(blank=True, to='task_board.coursework')),
                ('enrolled_courses', models.ManyToManyField(blank=True, to='task_board.course')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_state', models.CharField(blank=True, default='', max_length=50)),
                ('submission_created_time', models.DateTimeField(blank=True, null=True)),
                ('submission_updated_time', models.DateTimeField(blank=True, null=True)),
                ('score_rate', models.FloatField(default=0)),
                ('score_max', models.IntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
                ('course_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='task_board.course')),
                ('coursework_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='task_board.coursework')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='task_board.customsocialaccount')),
            ],
            options={
                'unique_together': {('user', 'course_id', 'coursework_id')},
            },
        ),
    ]
